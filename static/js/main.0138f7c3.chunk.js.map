{"version":3,"sources":["components/Navbar.js","components/Home.js","components/RandomGif.js","components/Search.js","App.js","index.js"],"names":["Navbar","className","style","fontFamily","fontSize","boxShadow","exact","to","Home","useState","trending","setTrend","slicedArr","setSliced","load","setLoad","loading","setLoading","api_key","process","fetchTrending","a","trend","fetch","response","json","console","log","data","map","res","images","fixed_height_downsampled","url","gifData","useEffect","setup","slice","key","alt","src","length","onClick","AsyncHooks","search","setSearch","query","setQuery","results","setResults","getError","setError","fetchData","useGiphy","onSubmit","e","preventDefault","handleSubmit","value","onChange","target","placeholder","type","Search","urlArr","setUrls","fetchSearch","getUrl","urls","App","path","require","config","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0138f7c3.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\n\r\n\r\nexport default function Navbar() {\r\n    return(\r\n        <div>\r\n            <h1 \r\n            className=\"mt-4 mb-5 col-md-12 text-info text-center\" \r\n            style={{fontFamily: 'Permanent Marker', fontSize: '5em'}}\r\n            >Gif City</h1>\r\n            <nav className=\"d-flex justify-content-center\">\r\n                <ul className=\"d-flex flex-row justify-content-center \" >\r\n                    <li>\r\n                        <NavLink className=\"btn btn-info nav-btn\" style={{boxShadow: 'none'}} exact to=\"/\">Trending</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"btn btn-info nav-btn\" style={{boxShadow: 'none'}} exact to=\"/random\">Random</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"btn btn-info nav-btn\" style={{boxShadow: 'none'}} exact to=\"/search\">Search</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\"\r\nrequire('dotenv').config()\r\n\r\nexport default function Home() {\r\n    const [trending, setTrend] = useState([])\r\n    const [slicedArr, setSliced] = useState([])\r\n    const [load, setLoad] = useState(8)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const api_key = process.env.REACT_APP_API_KEY\r\n\r\n\r\n    useEffect(() => {\r\n        setup()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setSliced(trending.slice(0, load))\r\n    }, [trending, load])\r\n\r\n    async function fetchTrending() {\r\n        let trend = []\r\n        try {\r\n            const response = await fetch(\r\n                `https://api.giphy.com/v1/gifs/trending?api_key=${api_key}&limit=80&rating=G`\r\n            )\r\n            const json = await response.json()\r\n            console.log(json)\r\n            trend = await json.data.map(res => res.images.fixed_height_downsampled.url)\r\n        } catch(err) {\r\n            console.log(err)  \r\n        }\r\n        return trend\r\n    }\r\n\r\n    async function setup() {\r\n        try {\r\n            const gifData = await fetchTrending()\r\n            setTrend(gifData.map(data => data))\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleLoad = () => {\r\n        setLoad(load + 8)\r\n    }\r\n\r\n    return(\r\n        <div className=\"row home-container mx-auto mt-5\">\r\n            <div className=\"col-md-12 text-info text-center mb-3\">\r\n                <h2>Trending Gifs</h2>\r\n            </div>\r\n            <div className=\"col-12 mx-auto text-center mb-5\">\r\n                {\r\n                    loading ? <h3>loading...</h3> : slicedArr.map((data, key) => <img className=\"trend m-2\" key={key} alt=\"\" src={data}></img>)\r\n                }\r\n            </div>\r\n            {\r\n                trending.length > load && <button className=\"btn btn-outline-secondary mb-5\" style={{boxShadow: 'none'}} onClick={handleLoad}>Load More</button>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\"\r\nrequire('dotenv').config()\r\n\r\nfunction useGiphy(query) {\r\n    const [results, setResults] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [getError, setError] = useState(false)\r\n\r\n    const api_key = process.env.REACT_APP_API_KEY\r\n    \r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                setLoading(true)\r\n                const response = await fetch(\r\n                    `https://api.giphy.com/v1/gifs/random?api_key=${api_key}&tag=${query}&rating=G`\r\n                )\r\n                const json = await response.json()\r\n                setResults(json.data.images.fixed_height_downsampled.url)\r\n\r\n                json.length === 0 ? setError(true) : setError(false)\r\n            } catch(err) {\r\n                console.log(err)\r\n                setError(true)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }   \r\n        if(query !== '') {\r\n            fetchData()\r\n        }\r\n    }, [query])\r\n    \r\n    return [results, loading, getError]\r\n}\r\n\r\nexport default function AsyncHooks() {\r\n    const [search, setSearch] = useState('')\r\n    const [query, setQuery] = useState('')\r\n    const [results, loading, getError] = useGiphy(query)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setQuery(search)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row text-center mx-auto home-container\">\r\n            <form onSubmit={(e) => handleSubmit(e)} className=\"input-group mb-5 mx-auto justify-content-center\">\r\n                <input\r\n                value={search}\r\n                onChange={e => setSearch(e.target.value)}\r\n                placeholder=\"Search a random GIF\"\r\n                />\r\n                <button className=\"btn btn-outline-secondary search-btn\" style={{boxShadow: 'none'}} type=\"submit\">Search</button>\r\n            </form>\r\n            <br />\r\n            {loading ? (\r\n                    <p className=\"col-md-12 text-align-center\">Loading gif...</p>\r\n                ) : (\r\n                    <div className=\"col-md-12 column mx-auto mb-5\">\r\n                        <img className=\"random-gif\" alt=\"\" src={results} />\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                !loading && getError && <p className=\"text-center\">No gifs found!</p>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\"\r\nrequire('dotenv').config()\r\n\r\n\r\nexport default function Search() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [urlArr, setUrls] = useState([])\r\n    const [slicedArr, setSliced] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const [load, setLoad] = useState(8)\r\n    const [getError, setError] = useState(false)\r\n\r\n    const api_key = process.env.REACT_APP_API_KEY\r\n\r\n\r\n    const fetchSearch = async (query) => {\r\n        let results = []\r\n        try {\r\n            setLoading(true)\r\n            const response = await fetch(\r\n                `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${query}&limit=200&offset=0&rating=G&lang=en`\r\n            )\r\n            const json = await response.json()\r\n            results = await json.data.map(res => res.images.fixed_height_downsampled.url)\r\n            results.length === 0 ? setError(true) : setError(false)\r\n            console.log(json)\r\n        } catch (err) {\r\n            console.log(err)\r\n            setError(true)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n        return { results }\r\n    }\r\n\r\n\r\n    const getUrl = async () => {\r\n        const urls = await fetchSearch(search)\r\n        setUrls(urls.results)\r\n    }\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        getUrl()\r\n        setLoad(8)\r\n    }\r\n\r\n    const handleLoad = () => {\r\n        setLoad(load + 8)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSliced(urlArr.slice(0, load))\r\n    }, [urlArr, load])\r\n\r\n    return(\r\n        <div className=\"row text-center mx-auto home-container\">\r\n            <form onSubmit={(e) => handleSubmit(e)} className=\"input-group mb-5 mx-auto justify-content-center\">\r\n                <input\r\n                value={search}\r\n                onChange={e => setSearch(e.target.value)}\r\n                placeholder=\"Search a GIF\"\r\n                />\r\n                <button className=\"btn btn-outline-secondary search-btn\" style={{boxShadow: 'none'}} type=\"submit\">Search</button>\r\n            </form><br />\r\n            <div className=\"col-12 mx-auto mb-5\">\r\n                {\r\n                 loading ? <p>loading...</p> : slicedArr.map((data, key) => <img className=\"trend m-2\" key={key} alt=\"\" src={data}></img>)\r\n                }\r\n                {\r\n                    getError && <p className=\"text-center\">No gifs found!</p>\r\n                }\r\n            </div>\r\n            {\r\n                    urlArr.length > load && <button className=\"btn btn-outline-secondary mb-5 mx-auto\" style={{boxShadow: 'none'}} onClick={handleLoad}>Load More</button>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\n\r\nimport Navbar from \"./components/Navbar\"\r\nimport Home from \"./components/Home\"\r\nimport RandomGif from \"./components/RandomGif\"\r\nimport Search from \"./components/Search\"\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n\r\n                <Route path=\"/random\">\r\n                    <RandomGif />\r\n                </Route>\r\n\r\n                <Route path=\"/search\">\r\n                    <Search />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nimport App from \"./App\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./styles.css\"\r\n\r\n\r\nReactDOM.render(\r\n<Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n</Router>, \r\n        document.getElementById('root')\r\n)"],"sourceRoot":""}